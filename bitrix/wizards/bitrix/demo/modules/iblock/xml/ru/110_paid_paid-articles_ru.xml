<?xml version="1.0" encoding="windows-1251"?>
<КоммерческаяИнформация ВерсияСхемы="2.021" ДатаФормирования="2008-04-09T12:22:40">
	<Классификатор>
		<Ид>paid-articles</Ид>
		<Наименование>Платные статьи</Наименование>
		<Свойства>
			<Свойство>
				<Ид>CML2_CODE</Ид>
				<Наименование>Символьный код</Наименование>
				<Множественное>false</Множественное>
			</Свойство>
			<Свойство>
				<Ид>CML2_SORT</Ид>
				<Наименование>Сортировка</Наименование>
				<Множественное>false</Множественное>
			</Свойство>
			<Свойство>
				<Ид>CML2_ACTIVE_FROM</Ид>
				<Наименование>Начало активности</Наименование>
				<Множественное>false</Множественное>
			</Свойство>
			<Свойство>
				<Ид>CML2_ACTIVE_TO</Ид>
				<Наименование>Окончание активности</Наименование>
				<Множественное>false</Множественное>
			</Свойство>
			<Свойство>
				<Ид>CML2_PREVIEW_TEXT</Ид>
				<Наименование>Анонс</Наименование>
				<Множественное>false</Множественное>
			</Свойство>
			<Свойство>
				<Ид>CML2_PREVIEW_PICTURE</Ид>
				<Наименование>Картинка анонса</Наименование>
				<Множественное>false</Множественное>
			</Свойство>
			<Свойство>
				<Ид>126</Ид>
				<Наименование>Автор</Наименование>
				<Множественное>false</Множественное>
				<БитриксСортировка>100</БитриксСортировка>
				<БитриксКод>AUTHOR</БитриксКод>
				<БитриксЗначениеПоУмолчанию></БитриксЗначениеПоУмолчанию>
				<БитриксТипСвойства>S</БитриксТипСвойства>
				<БитриксСтрок>1</БитриксСтрок>
				<БитриксКолонок>30</БитриксКолонок>
				<БитриксТипСписка>L</БитриксТипСписка>
				<БитриксТипыФайлов>jpg, gif, bmp, png, jpeg</БитриксТипыФайлов>
				<БитриксКоличествоПолей>5</БитриксКоличествоПолей>
				<БитриксСвязанныйИнфоблок></БитриксСвязанныйИнфоблок>
				<БитриксОписаниеРазрешено>false</БитриксОписаниеРазрешено>
				<БитриксПоискРазрешен>false</БитриксПоискРазрешен>
				<БитриксФильтрРазрешен>false</БитриксФильтрРазрешен>
				<БитриксРасширениеТипа></БитриксРасширениеТипа>
			</Свойство>
			<Свойство>
				<Ид>paid-articles-property-browser_title</Ид>
				<Наименование>Заголовок окна браузера</Наименование>
				<Множественное>false</Множественное>
				<БитриксСортировка>1000</БитриксСортировка>
				<БитриксКод>BROWSER_TITLE</БитриксКод>
				<БитриксЗначениеПоУмолчанию></БитриксЗначениеПоУмолчанию>
				<БитриксТипСвойства>S</БитриксТипСвойства>
				<БитриксСтрок>1</БитриксСтрок>
				<БитриксКолонок>30</БитриксКолонок>
				<БитриксТипСписка>L</БитриксТипСписка>
				<БитриксТипыФайлов></БитриксТипыФайлов>
				<БитриксКоличествоПолей>1</БитриксКоличествоПолей>
				<БитриксСвязанныйИнфоблок></БитриксСвязанныйИнфоблок>
				<БитриксОписаниеРазрешено>false</БитриксОписаниеРазрешено>
				<БитриксПоискРазрешен>true</БитриксПоискРазрешен>
				<БитриксФильтрРазрешен>true</БитриксФильтрРазрешен>
				<БитриксРасширениеТипа></БитриксРасширениеТипа>
			</Свойство>
		</Свойства>
	</Классификатор>
	<Каталог>
		<Ид>paid-articles</Ид>
		<ИдКлассификатора>paid-articles</ИдКлассификатора>
		<Наименование>Платные статьи</Наименование>
		<БитриксКод>paid_articles</БитриксКод>
		<БитриксСортировка>1000</БитриксСортировка>
		<БитриксURLСписок>/e-store/paid/</БитриксURLСписок>
		<БитриксURLДеталь>/e-store/paid/detail.php?ID=#ID#</БитриксURLДеталь>
		<БитриксURLРаздел></БитриксURLРаздел>
		<БитриксКартинка></БитриксКартинка>
		<БитриксИндексироватьЭлементы>false</БитриксИндексироватьЭлементы>
		<БитриксИндексироватьРазделы>false</БитриксИндексироватьРазделы>
		<БитриксДокументооборот>true</БитриксДокументооборот>
		<БитриксПодписи>
			<БитриксПодпись>
				<Ид>ELEMENT_NAME</Ид>
				<Значение>Статья</Значение>
			</БитриксПодпись>
			<БитриксПодпись>
				<Ид>ELEMENTS_NAME</Ид>
				<Значение>Статьи</Значение>
			</БитриксПодпись>
			<БитриксПодпись>
				<Ид>ELEMENT_ADD</Ид>
				<Значение>Добавить статью</Значение>
			</БитриксПодпись>
			<БитриксПодпись>
				<Ид>ELEMENT_EDIT</Ид>
				<Значение>Изменить статью</Значение>
			</БитриксПодпись>
			<БитриксПодпись>
				<Ид>ELEMENT_DELETE</Ид>
				<Значение>Удалить статью</Значение>
			</БитриксПодпись>
			<БитриксПодпись>
				<Ид>SECTION_NAME</Ид>
				<Значение>Раздел</Значение>
			</БитриксПодпись>
			<БитриксПодпись>
				<Ид>SECTIONS_NAME</Ид>
				<Значение>Разделы</Значение>
			</БитриксПодпись>
			<БитриксПодпись>
				<Ид>SECTION_ADD</Ид>
				<Значение>Добавить раздел</Значение>
			</БитриксПодпись>
			<БитриксПодпись>
				<Ид>SECTION_EDIT</Ид>
				<Значение>Изменить раздел</Значение>
			</БитриксПодпись>
			<БитриксПодпись>
				<Ид>SECTION_DELETE</Ид>
				<Значение>Удалить раздел</Значение>
			</БитриксПодпись>
		</БитриксПодписи>
		<Товары>
			<Товар>
				<Ид>1626</Ид>
				<Наименование>Почему умирают сайты?</Наименование>
				<БитриксТеги></БитриксТеги>
				<Описание>
&lt;p&gt;&lt;strong&gt;Нестабильные системы&lt;/strong&gt;&lt;/p&gt;

&lt;div&gt;&lt;font class=&quot;text&quot;&gt;Любой аппаратный комплекс, программа или сетевые системы создаются в расчете на определенные нагрузки. Нас не удивляет, когда покрышки автомобилей испытываются на максимально допустимую скорость и продаются с четким указанием допустимых величин. Но крайне редко приходится встречать подобное отношение к программно-аппаратным комплексам.
    &lt;br /&gt;

    &lt;br /&gt;
  Очень редко компании перед запуском проекта в эксплуатацию проводят нагрузочное тестирование сервера и определяют максимально допустимую посещаемость. Кстати, в рамках тестирования легко выявляются наиболее частые ошибки и слабые места, и в результате производительность сервера увеличивается в несколько раз.
    &lt;br /&gt;

    &lt;br /&gt;
  Но мы поговорим о причинах, по которым обычный веб-сервер в результате нагрузочного тестирования или реальных пиковых нагрузкок прекращает нормальное функционирование.
    &lt;br /&gt;

    &lt;br /&gt;
  При больших нагрузках проект может прекратить нормальное функционирование по следующим причинам:
    &lt;br /&gt;

    &lt;ol&gt;
      &lt;li&gt;&lt;span style=&quot;FONT-WEIGHT: bold&quot;&gt;Нехватка оперативной памяти для нормальной одновременной работы процессов&lt;/span&gt; веб-сервера и базы данных. В большинстве систем на каждый запрос к сайту открывается отдельный процесс веб-сервера. Обычный размер процесса Apache с подключенным PHP-модулем и работающим приложением может составить порядка 20-30 мегабайт. В результате пиковых нагрузок происходит одновременный запуск очень большого числа процессов (иногда больше нескольких сотен процессов). И как следствие, начинается свопирование процессов, а это неизбежно сказывается на производительности базы данных, и производительность всей системы в целом резко снижается. &lt;/li&gt;

      &lt;li&gt;&lt;span style=&quot;FONT-WEIGHT: bold&quot;&gt;Нехватка процессорных ресурсов для одновременного выполнения процессов&lt;/span&gt; и обеспечения адекватного для пользователя времени реакции. Данная ситуация может возникнуть в том случае, если в результате большого числа запросов к вашему серверу число одновременно выполняемых запросов превысит процессорные мощности сервера. И даже если у вас достаточно оперативной памяти и первая проблема не проявила себя, вы можете обнаружить, что система перестала адекватно отвечать на запросы, время выполнения страниц увеличилось в несколько раз, база данных перегружена очень большим числом запросов. Все это может привести к тому, что все без исключения пользователи не смогут работать с сервером.&amp;nbsp; &lt;/li&gt;

      &lt;li&gt;&lt;span style=&quot;FONT-WEIGHT: bold&quot;&gt;Недостаточная производительность базы данных при одновременных конкурентных запросах&lt;/span&gt;, невозможность полностью использовать ресурсы сервера. Данная ситуация очень часто возникает при работе с MySQL. Надо отметить, что обычно MySQL использует формат таблиц MyISAM. Это очень простой и эффективный вариант работы, но, к сожалению, при большом числе одновременных запросов такая база данных становится критически узким местом в производительности системы в целом. Во время вставки данных, обновления и некоторых других запросах, происходит эксклюзивное локирование таблиц и, как следствие, все запросы выполняются только последовательно, а не одновременно. В результате, при росте нагрузки, время генерации страниц возрастает необоснованно резко и в итоге становится неприемлемо большим. Менее всего подвержены подобным проблемам проекты, использующие Oracle или MSSQL, MySQL с форматом таблиц InnoDB. &lt;/li&gt;

      &lt;li&gt;&lt;span style=&quot;FONT-WEIGHT: bold&quot;&gt;Общая несбалансированность веб-системы при пиковых нагрузках и быстрая регрессия производительности&lt;/span&gt; даже при незначительных стрессах. При пиковых нагрузках вся система испытывает перегрузки. В дополнение к перечисленным проблемам возможно возникновение проблем в дисковой подсистеме. В итоге, если под одной из составляющих начинается потеря производительности, то существенно падает производительность всей системы, начинается падение производительности в других частях и, в итоге, еще больше снижается работоспособность, производительность системы регрессирует и иногда наступает полная остановка в работе. &lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;&lt;BREAK /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Оперативная память: большие процессы&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Остановимся чуть подробнее на вопросе использования веб-сервером оперативной памяти.&amp;nbsp;
      &lt;br /&gt;

      &lt;br /&gt;
    Как мы уже упоминали,&amp;nbsp;в большинстве конфигураций на каждый запрос пользователя к сайту веб-сервер запускает отдельный процесс-обработчик. Вместе с загруженными модулями, интерпретатором PHP и исполняемым приложением каждый процесс может занимать 20-30 мегабайт, а иногда и более.
      &lt;br /&gt;

      &lt;br /&gt;
    10 запущенных процессов будeт потреблять уже 200-300М, а запущенные 100 процессов приведут к сильнейшему свопингу системы с объемом оперативной памяти в 1Г, так как для работы всех процессов потребуется порядка 2-3Г памяти.
      &lt;br /&gt;

      &lt;br /&gt;
    Как показывает практика, именно нехватка оперативной памяти для всех процессов может стать ключевым фактором нестабильности при пиковых нагрузках.
      &lt;br /&gt;

      &lt;br /&gt;
    Также стоит отметить, что в обычной конфигурации веб-сервер обрабатывает все запросы к PHP-страницам, к графическим файлам, бинарным файлам, таблицам стилей и другим составным частям сайта.
      &lt;br /&gt;

      &lt;br /&gt;
    На одну страницу сайта может приходиться от нескольких десятков до нескольких сотен графических элементов. Загрузка бинарных файлов, XML-файлов, таблиц стилей также выполняется веб-сервером в обычных конфигурациях.
      &lt;br /&gt;

      &lt;br /&gt;
    Теперь, если вспомнить, что обычный процесс веб-сервера занимает 20-30М, то получается, что для выдачи статических элементов сайта полностью не используется функциональность по обработке PHP, а память при этом используется, и процесс занят обработкой запросов. Получается, что до 90% времени процесс, находящийся в памяти, будет обрабатывать именно статические документы, неэффективно используя ресурсы.
      &lt;br /&gt;

      &lt;br /&gt;
    Проблема выдачи статического контента настолько существенна, что одной из важнейших задач является минимизация числа статических запросов, обрабатываемых веб-сервером.
      &lt;br /&gt;
    &lt;/p&gt;

    &lt;p&gt;&lt;BREAK /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Оперативная память: медленные каналы&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Еще один аспект проблемы &amp;ndash; это медленные каналы пользователей вашего сайта по меркам веб-сервера. Казалось бы, какое отношение эта проблема может иметь к владельцу сайта? Оказывается, не просто имеет отношение, но и может стать причиной больших проблем.
      &lt;br /&gt;

      &lt;br /&gt;
    Например, время генерации страницы может составлять 0.01 секунды, а время передачи страницы клиенту даже с компрессией может занимать от 5 до 50 секунд и более.
      &lt;br /&gt;

      &lt;br /&gt;
    В течение всего времени передачи страницы клиенту веб-сервер будет держать в памяти практически бездействующий процесс Apache, который будет только дожидаться завершения передачи данных, но не сможет высвободить память и высвободиться сам, чтобы обработать другой запрос.
      &lt;br /&gt;

      &lt;br /&gt;
    Очень часто администраторы не отдают себе отчет в том, насколько данный фактор влияет на стабильность системы и эффективное использование оперативной памяти.
      &lt;br /&gt;

      &lt;br /&gt;
    Давайте сделаем простой расчет. Рассмотрим две системы: А и Б.
      &lt;br /&gt;

      &lt;br /&gt;
    В системе А время генерации страниц составит 0.1 секунды, а время передачи страницы клиенту в среднем будет составлять всего 5 секунд (в реальной жизни среднее значение окажется еще больше). В системе Б мы будем считать время генерации страниц равным 0.1, а время передачи страницы пользователю равным нулю.
      &lt;br /&gt;

      &lt;br /&gt;
    Предположим, что на каждый сайт поступает по 100 запросов в секунду.
      &lt;br /&gt;

      &lt;br /&gt;
    Система А: обработка 100 запросов в секунду потребует одновременной работы 100 самостоятельных процессов веб-сервера! &amp;quot;Почему?&amp;quot; - спросите вы. А как же иначе, если даже обработав запрос за 0.1 с., наши процессы, получается, еще не способны обрабатывать другие запросы, а будут висеть в памяти и просто дожидаться, пока пользователи в течение 5 секунд будут получать страницу. На четвертой секунде веб-сервер получит еще 100 запросов и должен будет запустить еще 100 процессов. Соответственно, на пятой секунде в памяти должно находиться 500 процессов и только с этого момента процессы первой секунды начнут высвобождаться и обрабатывать новые запросы. Таким образом, система А для нормальной работы будет запускать порядка 500 процессов, что потребует от нас в лучшем случае 10Г оперативной памяти. Обратите внимание, что даже если бы время генерации страниц было равно 0.001 секунды, это бы не увеличило производительность системы, так как процессы ожидают передачи данных пользователям на медленных каналах, а не времени генерации страниц. Т.е. &lt;strong&gt;производительность системы А никак не связана с производительностью PHP и продукта&lt;/strong&gt;.
      &lt;br /&gt;

      &lt;br /&gt;
    Система Б: за первую секунду на сервер поступит 100 запросов. Для обработки 100 запросов нам потребуется всего 10 процессов. Один процесс обрабатывает один запрос за 0.1 секунды. Как мы договорились для системы Б, время передачи страницы пользователю будет равно нулю. Т.е. за 1 секунду, один процесс веб-сервера способен обработать 10 запросов пользователей! К завершению первой секунды, все запросы будут обработаны всего 10 процессами и ко второй секунде все эти процессы будут свободны и готовы обрабатывать следующие запросы. Так же случится и на третьей секунде, и через час. Таким образом, система Б для нормальной работы будет запускать всего 10 процессов, что потребует от нас порядка 200М оперативной памяти. И очень важно отметить, что уменьшение времени генерации страниц до 0.01 секунды позволит реально увеличить производительность системы в 10 раз, и нам будет достаточно уже только 1 процесса для обработки всех 100 запросов в секунду. &lt;strong&gt;Производительность системы Б зависит только от производительности PHP и продукта и не зависит от медленных каналов.&lt;/strong&gt;
      &lt;br /&gt;

      &lt;br /&gt;
    Очень наглядный пример, который демонстрирует, насколько велико влияние медленных каналов пользователей на общую производительность веб-системы. Веб-сервер очень неэффективно расходует оперативную память на медленных каналах.
      &lt;br /&gt;
    &lt;/p&gt;
  &lt;/font&gt;&lt;/div&gt;
</Описание>
				<ЗначенияСвойств>
					<ЗначенияСвойства>
						<Ид>CML2_CODE</Ид>
						<Значение></Значение>
					</ЗначенияСвойства>
					<ЗначенияСвойства>
						<Ид>CML2_SORT</Ид>
						<Значение>500</Значение>
					</ЗначенияСвойства>
					<ЗначенияСвойства>
						<Ид>CML2_ACTIVE_FROM</Ид><Значение></Значение>
					</ЗначенияСвойства>
					<ЗначенияСвойства>
						<Ид>CML2_ACTIVE_TO</Ид>
						<Значение></Значение>
					</ЗначенияСвойства>
					<ЗначенияСвойства>
						<Ид>CML2_PREVIEW_TEXT</Ид>
						<Значение>Рассмотрим&amp;nbsp;основные причины, которые приводят к нестабильной работе веб-сервера или даже к полному отказу в обслуживании. Четкое понимание причин позволит вам вдумчиво подходить к рекомендациям и максимально эффективно использовать все имеющиеся у вас аппаратные ресурсы.</Значение>
					</ЗначенияСвойства>
					<ЗначенияСвойства>
						<Ид>CML2_PREVIEW_PICTURE</Ид>
						<Значение></Значение>
					</ЗначенияСвойства>
					<ЗначенияСвойства>
						<Ид>126</Ид>
					</ЗначенияСвойства>
				</ЗначенияСвойств>
			</Товар>
			<Товар>
				<Ид>1630</Ид>
				<Наименование>Продажа контента</Наименование>
				<БитриксТеги></БитриксТеги>
				<Описание>
&lt;p&gt;Технология продажи контента основана на базовом принципе системы &amp;laquo;Битрикс: Управление сайтом&amp;raquo; &amp;ndash; разграничение прав доступа к ресурсам сайта. Для каждой группы пользователей сайта задается определенный набор прав, позволяющий членам данных групп получать доступ к той или иной информации на сайте. Посетитель, совершивший покупку какого-либо контента, добавляется в список пользователей сайта и привязывается к группе пользователей, обладающей правом доступа к данному контенту. &lt;/p&gt;

&lt;p&gt;Таким образом, процесс продажи контента сводится к продаже прав доступа к той или иной группе пользователей. Причем существует возможность продажи прав доступа как на определенный период (продажа абонемента), так и без ограничения сроков использования. &lt;/p&gt;

&lt;p&gt;В общем случае, процесс организации продажи контента на сайте может быть описан следующей последовательностью операций: &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;создание группы пользователей, обладающей правами доступа к необходимым ресурсам сайта; &lt;/li&gt;

  &lt;li&gt;настройка возможности продажи прав доступа данной группы; &lt;/li&gt;

  &lt;li&gt;создание и соответствующая настройка торгового каталога для продажи контента; &lt;/li&gt;

  &lt;li&gt;настройка Интернет-магазина; &lt;/li&gt;

  &lt;li&gt;размещение предлагаемых товаров (контента) в публичном разделе сайта; &lt;/li&gt;

  &lt;li&gt;получение и обработка заказов покупателей. &lt;/li&gt;
 &lt;/ul&gt;

&lt;p&gt;В качестве примера мы организуем продажу подписки к подробному содержанию статей. Начнем с создания группы пользователей &lt;b&gt;Подписчики&lt;/b&gt;. Это выполняется на странице &lt;b&gt;Группы пользователей&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Настройки &amp;ndash;&amp;gt; Пользователи &amp;ndash;&amp;gt; Группы пользователей&lt;/i&gt; &lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;200&quot; height=&quot;174&quot; src=&quot;/e-store/paid/images/usergroup_sm.png&quot; /&gt;
  &lt;br clear=&quot;all&quot; /&gt;
 &lt;/p&gt;

&lt;p&gt;На закладке &lt;b&gt;Доступ&lt;/b&gt; задаются права пользователей создаваемой группы на доступ к административным частям модулей системы. Пользователям группы &lt;b&gt;Подписчики&lt;/b&gt; будет предоставлен доступ только к информации в публичном разделе сайта, поэтому значения полей следует оставить равными &lt;b&gt;&amp;lt;по умолчанию&amp;gt;&lt;/b&gt;. &lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;200&quot; height=&quot;210&quot; src=&quot;/e-store/paid/images/access_sm.png&quot; /&gt;
  &lt;br clear=&quot;all&quot; /&gt;
 &lt;/p&gt;

&lt;p&gt;&lt;BREAK /&gt;&lt;/p&gt;

&lt;p&gt;Создадим информационный блок, информацию из которого мы будем продавать:&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;200&quot; height=&quot;178&quot; src=&quot;/e-store/paid/images/iblock_articles_s.png&quot; /&gt;&amp;nbsp;
  &lt;br clear=&quot;all&quot; /&gt;
 &lt;/p&gt;

&lt;p&gt;Обратите внимание, в полях этой формы мы определили раздел сайта, в котором будут храниться страницы визуального просмотра: &lt;b&gt;/e-store/paid/&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;Добавим элементы в созданный информационный блок &lt;b&gt;Платные статьи&lt;/b&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;200&quot; height=&quot;56&quot; src=&quot;/e-store/paid/images/table_article_s.png&quot; /&gt;
  &lt;br clear=&quot;all&quot; /&gt;
 &lt;/p&gt;

&lt;p&gt;Создадим еще один информационный блок, элементы которого будут организованы как товары. С помощью этого инфоблока будет организована непосредственно продажа контента.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;200&quot; height=&quot;181&quot; src=&quot;/e-store/paid/images/subscribe_s.png&quot; /&gt;
  &lt;br clear=&quot;all&quot; /&gt;
 &lt;/p&gt;

&lt;p&gt;Для этого инфоблока в настройках модуля &lt;b&gt;Торговый каталог&lt;/b&gt; на закладке &lt;b&gt;Каталоги&lt;/b&gt; нужно установить флаг в поля &lt;b&gt;Является торговым каталогом&lt;/b&gt; и &lt;b&gt;Продажа контента&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;200&quot; height=&quot;181&quot; src=&quot;/e-store/paid/images/set_cat_s.png&quot; /&gt;
  &lt;br clear=&quot;all&quot; /&gt;
 &lt;/p&gt;

&lt;p&gt;А на закладке &lt;b&gt;Продажа прав&lt;/b&gt; необходимо установить флаг для той группы пользователей, которая обладает правом доступа к продаваемому контенту. Мы будем продавать права группы &lt;b&gt;Подписчики&lt;/b&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img width=&quot;200&quot; height=&quot;188&quot; src=&quot;/e-store/paid/images/rightsell_sm.png&quot; /&gt;
  &lt;br clear=&quot;all&quot; /&gt;
 &lt;/p&gt;
 </Описание>
				<ЗначенияСвойств>
					<ЗначенияСвойства>
						<Ид>CML2_CODE</Ид>
						<Значение></Значение>
					</ЗначенияСвойства>
					<ЗначенияСвойства>
						<Ид>CML2_SORT</Ид>
						<Значение>500</Значение>
					</ЗначенияСвойства>
					<ЗначенияСвойства>
						<Ид>CML2_ACTIVE_FROM</Ид><Значение></Значение>
					</ЗначенияСвойства>
					<ЗначенияСвойства>
						<Ид>CML2_ACTIVE_TO</Ид>
						<Значение></Значение>
					</ЗначенияСвойства>
					<ЗначенияСвойства>
						<Ид>CML2_PREVIEW_TEXT</Ид>
						<Значение>Технология продажи контента основана на базовом принципе системы &amp;laquo;Битрикс: Управление сайтом&amp;raquo; &amp;ndash; разграничение прав доступа к ресурсам сайта. </Значение>
					</ЗначенияСвойства>
					<ЗначенияСвойства>
						<Ид>CML2_PREVIEW_PICTURE</Ид>
						<Значение></Значение>
					</ЗначенияСвойства>
					<ЗначенияСвойства>
						<Ид>126</Ид>
					</ЗначенияСвойства>
				</ЗначенияСвойств>
			</Товар>
		</Товары>
	</Каталог>
</КоммерческаяИнформация>
